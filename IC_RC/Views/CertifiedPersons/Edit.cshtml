@model ICRC.Model.CertifiedPersons

@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CertifiedPersons</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="row">
            <div class="col-md-4 col-lg-4 col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-lg-4 col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-md-4 col-lg-4 col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4 col-lg-4 col-sm-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                    </div>
                </div>
               
            </div>
            <div class="col-md-4 col-lg-4 col-sm-4">


                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Providence, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Providence, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Providence, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SSN, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.SSN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SSN, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.EthicalVoilation, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.EthicalVoilation)
                            @Html.ValidationMessageFor(model => model.EthicalVoilation, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">Current Board</label>
                    @*@Html.LabelFor(model => model.CurrentBoardID, htmlAttributes: new { @class = "control-label col-md-4" })*@
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.CurrentBoardID, ViewBag.CurrentBoardID as List<SelectListItem>, new { @class = "form-control" })
                        @*@Html.DropDownList("CurrentBoardID", "select--")*@
                        @*@Html.EditorFor(model => model.CurrentBoardID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentBoardID, "", new { @class = "text-danger" })*@
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-4">Other Board</label>
                    @*@Html.LabelFor(model => model.OtherBoardID, htmlAttributes: new { @class = "" })*@
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.OtherBoardID, ViewBag.CurrentBoardID as List<SelectListItem>, new { @class = "form-control" })
                        @*@Html.DropDownList("OtherBoardID", "select--")*@
                        @*@Html.EditorFor(model => model.OtherBoardID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OtherBoardID, "", new { @class = "text-danger" })*@
                    </div>
                </div>

            </div>
        </div>
      

     

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
        <input type="hidden" value="@Model.ID" id="ID" />
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@*<div id="childnav">
     <span id="Certifications" value="1">Certifications</span>
    <span id="Reciprocity" value="2"> Reciprocity</span>
    <span id="Voilations" value="3">Ethical Voilations</span>
</div>
<div id="divContainer">
      @Html.Action("Certifications")
</div>

@section scripts
{
    <script>
        $(document).on('click', '#childnav span', function () {
            var val = $(this).attr('value');
            var ID = $('#ID').val();
            if(val==1)
            {
                $("#divContainer").load('certifiedPersons/Certifications?ID='+ID);
            }
            else if(val==2)
            {
                $("#divContainer").load('certifiedPersons/Reciprocity?ID=' + ID);
            }
            else (val==3)
            {
                $("#divContainer").load('certifiedPersons/Voilations?ID=' + ID);
            }

        });
    </script>
    }*@
