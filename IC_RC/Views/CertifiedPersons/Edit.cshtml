@model ICRC.Model.CertifiedPersons

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-offset-8 col-md-5 text-right">
            <div class="form-group bottom-space">
                <div class="col-md-offset-2 col-md-7">
                    <input type="submit" value="Save" class="btn btn-default custom-button" />
                    <input type="button" value="Back" class="btn btn-default custom-button" onclick="gotoPage('@ViewBag.ReturnURL')" />
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="form-horizontal">
        @*<h4>CertifiedPersons</h4>
        <hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="row">
            <div class="col-md-10">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Suffix, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.Suffix, ViewBag.Suffix as IEnumerable<SelectListItem>, "select--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Suffix, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextAreaFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-4">Current Board</label>
                            @*@Html.LabelFor(model => model.CurrentBoardID, htmlAttributes: new { @class = "control-label col-md-4" })*@
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.CurrentBoardID, (SelectList)ViewBag.CurrentBoardID, "select--", new { @class = "form-control" })
                                @*@Html.DropDownList("CurrentBoardID", "select--")*@
                                @*@Html.EditorFor(model => model.CurrentBoardID, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CurrentBoardID, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.EthicalViolation, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.EthicalViolation)
                                    @Html.ValidationMessageFor(model => model.EthicalViolation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextAreaFor(model => model.Notes, new { rows=10})
                                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div> 
      
        <input type="hidden" value="@Model.ID" id="ID" />
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
@*<div id="childnav">
     <span id="Certifications" value="1">Certifications</span>
    <span id="Reciprocity" value="2"> Reciprocity</span>
    <span id="violations" value="3">Ethical violations</span>
</div>
<div id="divContainer">
      @Html.Action("Certifications")
</div>

@section scripts
{
    <script>
        $(document).on('click', '#childnav span', function () {
            var val = $(this).attr('value');
            var ID = $('#ID').val();
            if(val==1)
            {
                $("#divContainer").load('certifiedPersons/Certifications?ID='+ID);
            }
            else if(val==2)
            {
                $("#divContainer").load('certifiedPersons/Reciprocity?ID=' + ID);
            }
            else (val==3)
            {
                $("#divContainer").load('certifiedPersons/violations?ID=' + ID);
            }

        });
    </script>
    }*@

@section scripts
{
    <script>
        $(document).ready(function () {

            var isAdmin = readCookie('AdminCookie');
            if(isAdmin.toUpperCase()!="ADMIN")
            {
                $('input').attr('disabled', 'disabled');
                $('select').prop('disabled', true);
                $('textarea').prop('disabled', true);
                $('#FirstName').prop('disabled', false);
                $('#LastName').prop('disabled', false);
                $('#MiddleName').prop('disabled', false);
                $('#Address1').prop('disabled', false);
                $('#Address1').prop('disabled', false);
                $('#Address2').prop('disabled', false);
                $('input[type="submit"]').prop('disabled', false);
                $('input[type="button"]').prop('disabled', false);


            }
        });
    </script>
}