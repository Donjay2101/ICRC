@model IEnumerable<ICRC.Model.ViewModel.CertificationViewModelForIndex>
@{
    ViewBag.Title = "Index";
}

<div class="row">
    <div class="col-md-6 col-md-offset-6 text-right">       
        <a class="linkbtn" id="btnSearch"><span class="glyphicon glyphicon-search space" aria-hidden="true"></span>Search</a>
        <a class="linkbtn" id="btnClearSearch"><span class="glyphicon glyphicon-search space" aria-hidden="true"></span>Clear Search</a>
    </div>
   
</div>

<div class="divSearch bottom-space">
    <div class="row">
        <div class="col-md-3">
   
               <label class="control-label"> CertId:</label>
    
                <input type="Search" placeholder="Search CertId" id="txtCertID" class="form-control"/>
       
        </div>
        <div class="col-md-3">
         
                <label class="control-label">  Certificate number:</label>
        
                <input type="Search" placeholder="Search certificate number" id="txtCertificateNumber" class="form-control"/>
       
        </div>
        @*<div class="col-md-2">
            <div class="row">
                Start Date:
            </div>
            <div class="row">
                <input type="Search" class="date" placeholder="Search Start Date" id="txtStartDate" />
            </div>
        </div>
        <div class="col-md-2">
            <div class="row">
                State Recret. Date
            </div>
            <div class="row">
                <input type="Search" class="date" placeholder="Search State recert. date" id="txtRecertDate" />
            </div>
        </div>*@
        <div class="col-md-3">
       
                <label class="control-label"> Individual:</label> 
   
                <input type="Search" placeholder="Search Individual" id="txtPerson" class="form-control"/>

        </div>        
    </div>

</div>

<div id="divContainer">    
    @Html.Partial("_Certifications",Model)    
</div>

@section  scripts
{
    <script>

    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })

    $(document).on('click', '#btnImport', function () {
        debugger;
        showOverLay();
        var htmlString = "<span id='closeDialog1' class='glyphicon glyphicon-remove pull-right'></span><div class='row'>" +
                            "<div class='col-md-8'><input type='file' id='file' style='margin-top: 10%;'/></div>" +
                            "<div class='col-md-4'><input type='button' value='upload' name='upload' id='btnUpload' class='popup-btn' style='border:none;color:white;'/></div>" +
            "</div>";

        $('#dataContainer').html(htmlString);
        hideOverLay();

        $('#overlayDialog').css('display', 'block');
    });

    $(document).on('click', '#btnUpload', function () {
        showOverLay();
        if (window.FormData !== undefined) {

            var fileUpload = $("#file").get(0);
            var files = fileUpload.files;

            // Create FormData object
            var fileData = new FormData();

            // Looping over all files and add it to FormData object
            for (var i = 0; i < files.length; i++) {
                fileData.append(files[i].name, files[i]);
            }

            // Adding one more key to FormData object
            //fileData.append('username', ‘Manas’);

            jQuery.ajax({
                url: '/Certifications/UploadCertifications',
                data: fileData,
                cache: false,
                contentType: false,
                processData: false,
                type: 'POST',
                success: function (data) {
                    if (data == "-3")
                    {
                        window.location.href= '/Account/login';
                    }
                    else
                    {
                        alert("data uploaded successfully");
                    }
                    hideOverLay();
                    $('#overlayDialog').css('display', 'none');
                },
                error: function (err) {
                    //alert(err);
                    alert(err.statusText);
                    hideOverLay();
                }
            });
        }
        else {
            alert("FormData is not supported.");
        }
        //debugger;
        //var data = new FormData();
        //$.each($('#file')[0].files, function (i, file) {
        //    data.append(file.name, file);
        //});


    });

    function downloadExcel()
    {
        window.open('/Certifications/downloadExcel','_blank')
    }

    $(document).on('click', '#btnClearSearch', function () {
        $('#txtCertID').val("");
        $('#txtCertificateNumber').val("");
        $('#txtPerson').val("");

        searchData('','','');
    });



    $(document).on('click', '#btnSearch', function () {
        var obj = new Object;

        var certID=$('#txtCertID').val();
        var certNumber=$('#txtCertificateNumber').val();
        var person=$('#txtPerson').val();



        if (certID == '' && certNumber== '' && person=='')
            return;
        searchData(certID, certNumber,person);

    });

    function searchData(certID, certNumber,person) {

        var url = "/Certifications/GetData?certID=" + certID + "&certNumber=" + certNumber + "&person=" + person;
        showOverLay();
        $.ajax({
            url: url,
            type: "GET",
            success: function (data) {
                $('#divContainer').html(data);
                hideOverLay();
            },
            error: function (err) {
                hideOverLay();
                console.log(err.statusText);
            }

        });
    }
</script>
    }
