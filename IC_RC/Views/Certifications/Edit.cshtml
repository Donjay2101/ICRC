@model ICRC.Model.Certifications

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-4">
            <span style="color:red">
                *enter three characters to search the Individual in given field.
            </span>
        </div>
        <div class="col-md-offset-8 col-md-5 text-right">
            <div class="form-group bottom-space">
                <div class="col-md-offset-2 col-md-7">
                    <input type="submit" value="Save" class="btn btn-default custom-button" />
                    <input type="button" value="Back" class="btn btn-default custom-button" onclick="gotoPage('@ViewBag.ReturnURL')" />
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="form-horizontal">

         @*<h4>Certifications</h4>
        <hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PersonID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <input type="search" autocomplete="off" class="form-control" value="@ViewBag.Person" id="person" />
                                @*@Html.DropDownListFor(model => model.PersonID, (SelectList)ViewBag.Persons, "select--", new { @class = "form-control" })*@
                                @*@Html.EditorFor(model => model.PersonID, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.HiddenFor(model => model.PersonID)
                                @Html.ValidationMessageFor(model => model.PersonID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CertIssueDate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.CertIssueDate, new { htmlAttributes = new { @class = "form-control date" } })
                                @Html.ValidationMessageFor(model => model.CertIssueDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.RecertDate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.RecertDate, new { htmlAttributes = new { @class = "form-control date" } })
                                @*@Html.EditorFor(model => model.RecertDate,new { @class = "form-control date" })*@
                                @*<input type="text" id="RecertDate" name="RecertDate" class="form-control text-box single-line date" />*@
                                @*@Html.EditorFor(model => model.RecertDate, new { htmlAttributes = new { @class = "form-control date" } })*@
                                @Html.ValidationMessageFor(model => model.RecertDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IssueBoard, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.IssueBoard, (SelectList)ViewBag.Boards, "select--", new { @class = "form-control" })
                                @*@Html.EditorFor(model => model.IssueBoard, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.IssueBoard, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BoardCertificateAcronym, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @*@Html.DropDownListFor(model => model.BoardCertificateAcronym, (SelectList)ViewBag.Certificates, "select--", new { @class = "form-control" })*@
                                @*@Html.DropDownListFor(model => model.IssueBoard, (SelectList)ViewBag.Boards, new { @class = "form-control" })*@
                                @Html.EditorFor(model => model.BoardCertificateAcronym, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BoardCertificateAcronym, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.certificateNo, htmlAttributes: new { @class = "control-label col-md-4", @disabled = "true" })
                            <div class="col-md-8">

                                <label id="certificateNo1" name="certificateNo1" value="">@Model.certificateNo </label>
                                @Html.HiddenFor(model=>model.certificateNo)
                                @*<input type="hidden" value="@Model.certificateNo" name="certificateNo" id="certificateNo" />*@
                                @*@Html.HiddenFor(model=>model.certificateNo,new { value=ViewBag.CertificateNumber })*@
                                @*@Html.EditorFor(model => model.certificateNo,new { htmlAttributes = new { @class = "form-control",value= "@@ViewBag.CertificateNumber" } })*@
                                @Html.ValidationMessageFor(model => model.certificateNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CertRequestDate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.CertRequestDate, new { htmlAttributes = new { @class = "form-control date" } })
                                @Html.ValidationMessageFor(model => model.CertRequestDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PaymentNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.PaymentNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PaymentNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CertRequestFee, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.CertRequestFee, ViewBag.Fees as IEnumerable<SelectListItem>, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CertRequestFee, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.PaymentType, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @foreach (var item in ViewBag.PaymentTypes)
                                {
                                    <span>@item.Name     </span><input type="radio" value="@item.ID" name="PaymentType" />
                                }

                                @*@Html.EditorFor(model => model.CertRequestFee, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.CertRequestFee, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AddToPrintQueues, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="checkbox">
                                    @Html.CheckBox("AddToPrintQueues", false)
                                    @Html.ValidationMessageFor(model => model.AddToPrintQueues, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CertID, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.CertID, (SelectList)ViewBag.Certificates, "select--", new { @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.CertID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        


                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CertNotes, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextAreaFor(model => model.CertNotes, new { rows = 10, cols = 50 })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        @*<div class="row">
            <div class="col-md-6 col-lg-6 col-sm-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.CertID, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.CertID, (SelectList)ViewBag.Certificates,"select--", new { @class = "form-control" })
                       @Html.EditorFor(model => model.CertID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CertID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BoardCertificateNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.BoardCertificateNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BoardCertificateNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
               
              
                <div class="form-group">
                    @Html.LabelFor(model => model.CertNotes, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CertNotes, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CertNotes, "", new { @class = "text-danger" })
                    </div>
                </div>
               
             
            </div>

        </div>*@
        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@
    </div>
}

@section scripts
{

    <script>
        //$(document).ready(function () {

        //    //var data="1234567890";
        //    //var num = Math.random(100000, 999999);

        //    $.ajax({
        //        url: "/certifications/GenerateCertificateNumber",
        //        //data:{number:num},
        //        success:function(result){
        //            $('#certificateNo').val(result);
        //        },
        //        error:function(){

        //        }
        //    });
        //    $('certificateNo').val();


        //});
    </script>
}
