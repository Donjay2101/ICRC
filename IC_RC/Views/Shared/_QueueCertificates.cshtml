@model IEnumerable<ICRC.Model.Certifications>
@using GridMvc.Html
<div class="row">

    <div class="col-md-8">
        <a href="#" id="btnPrint" class="linkbtn"><span class="glyphicon glyphicon-print space" aria-hidden="true"></span>Print all</a>
        <a href="#" id="btnSelectedPrint" class="linkbtn"><span class="glyphicon glyphicon-print space" aria-hidden="true"></span>Print selected certificates</a>
        <a href="#" id="btnClearQueue" class="linkbtn"><span class="glyphicon glyphicon-remove-circle space" aria-hidden="true"></span>Clear Queue</a>
        <a href="#" id="btnSClearQueue" class="linkbtn"><span class="glyphicon glyphicon-remove-circle space" aria-hidden="true"></span>Clear selected from Queue</a>
    </div>
</div>


@Html.Grid(Model).Columns(columns =>
{
columns.Add()
      .Encoded(false)
      .Sanitized(false)
      .SetWidth(30)
      .Css("hidden-xs") //hide on phones
      .RenderValueAs(c =>
    @<div id="balloon" class="balloonClass">
        <b>
            @*@Html.ActionLink("Edit", "Edit", new { id = c.ID }, new { @class = "modal_link", @Id = "editlink" })*@
            <input type="checkbox" value="@c.ID" name="chkSelectedChkBox" />
        </b>
    </div>);
columns.Add()
.Encoded(false)
.Sanitized(false)
.SetWidth(30)
.Css("hidden-xs") //hide on phones
.RenderValueAs(c =>
            @<div id="balloon" class="balloonClass">
                <b>
                    @*@Html.ActionLink("Edit", "Edit", new { id = c.ID }, new { @class = "modal_link", @Id = "editlink" })*@
                    <a href="#" onclick="gotoCreate('/Certifications/edit?id=@c.ID')" class="modal_link" id="editlink" data-toggle="tooltip" data-placement="bottom" title="Edit"><span class="glyphicon glyphicon-pencil space" aria-hidden="true"></span></a>
                </b>
            </div>);
                        columns.Add()
                                   .Encoded(false)
                                   .Sanitized(false)
                                   .SetWidth(30)
                                   .Css("hidden-xs") //hide on phones
                                   .RenderValueAs(c =>
                                @<div id="balloon" class="balloonClass">
                                    <b>
                                        @*<a href="#" onclick="Deleteconfirm('@c.ID')">Delete</a>*@
                                        <a href="#" onclick="confirmDelete('/Certifications/Delete/@c.ID','/Certifications')" data-toggle="tooltip" data-placement="bottom" title="Delete"><span class="glyphicon glyphicon-trash space" aria-hidden="true"></span></a>
                                    </b>
                                </div>);
                    columns.Add()
       .Encoded(false)
       .Sanitized(false)
       .SetWidth(30)
       .Css("hidden-xs") //hide on phones
       .RenderValueAs(c =>
    @<div id="balloon" class="balloonClass">
        <b>
            @*@Html.ActionLink("Edit", "Edit", new { id = c.ID }, new { @class = "modal_link", @Id = "editlink" })*@
            <a href="#" onclick="gotoCreate('/Certifications/details?id=@c.ID')" data-toggle="tooltip" data-placement="bottom" title="Details"><span class="glyphicon glyphicon-file space" aria-hidden="true"></span></a>
        </b>
    </div>);
                        columns.Add(c => c.CertificateAcronym).Titled("CertID");
                        columns.Add(c => c.certificateNo).Titled("Certificate No.");
                        columns.Add(c => c.CertIssueDate).Titled("Start Date").Format("{0:MM/dd/yyyy}");
                        columns.Add(c => c.RecertDate).Titled("State Recert. Date").Format("{0:MM/dd/yyyy}");
                        columns.Add(c => c.PersonName).Titled("Individual");
                    }).WithPaging(10).Sortable().Filterable().WithMultipleFilters()
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/gridmvc.min.js"></script>
<script>
    $(document).on('click', '#btnPrint', function () {

        window.open("/Certifications/PrintBatchCertificates", "_blank");

       
    });

    $(document).on('click', '#btnSelectedPrint', function () {
        var idarr=[];
        $('[name="chkSelectedChkBox"]').each(function(idx,element) {
            if (element.checked == true)
            {
                var id = element.getAttribute("value");
                idarr.push(id);
            }            
        });
        window.open("/Certifications/PrintBatchCertificates?ids="+JSON.stringify(idarr), "_blank");
    });


    $(document).on('click', '#btnClearQueue', function () {

        if(confirm('you are about to clear certificates printing Queue. Are you sure?'))
        {
            clearQueue();
        }
    });

    $(document).on('click', '#btnSClearQueue', function () {
        if (confirm('you are about to clear certificates printing Queue. Are you sure?')) {
            debugger;
            var ids = "";
            $('[name="chkSelectedChkBox"]').each(function (idx, element) {
                debugger;
                if (element.checked == true) {
                    var id = element.getAttribute("value");
                    ids += id + ",";
                }
            });
            ids = ids.substring(0,ids.lastIndexOf(','));
            clearQueue(ids);
        }
    });

    function clearQueue(ids)
    {
        showOverLay();
        $.ajax({
            url: "/Certifications/ClearQueue?ids="+ids,
            type: "POST",
            success: function (data) {
                if (data == "1")
                {
                    alert('Queue deleted successfully.');
                    $('#divContainer').load('/Certifications/ShowCertificationQueue', function () {
                        
                    });
                }
                else
                {
                    alert(data);                    
                }
                hideOverLay();
                                
            },
            error: function (err) {
                alert(err.statusText);
                hideOverLay();
            }
        });
    }
</script>






