@model IEnumerable<ICRC.Model.Studentviolations>
@using GridMvc.Html
@using ICRC.Model

<div>
    @*<a href="/Ethicalviolations/Create">Create new</a>*@
    <a href="#" onclick="gotoCreate('/Ethicalviolations/Create')" class="linkbtn"><span class="glyphicon glyphicon-plus space" aria-hidden="true"></span>Create new</a>
</div>


@Html.Grid(Model).Columns(columns =>
                    {
                        columns.Add()
               .Encoded(false)
               .Sanitized(false)
               .SetWidth(30)
               .Css("hidden-xs") //hide on phones
               .RenderValueAs(c =>
            @<div id="balloon" class="balloonClass">
                <b>
                    @*@Html.ActionLink("Edit", "Edit", new { id = c.ID }, new { @class = "modal_link", @Id = "editlink" })*@
                    <a href="#" onclick="gotoCreate('/Ethicalviolations/edit?id=@c.ID')" class="modal_link" id="editlink" data-toggle="tooltip" data-placement="bottom" title="Edit"><span class="glyphicon glyphicon-pencil space" aria-hidden="true"></span></a>
                </b>
            </div>);
                        columns.Add()
                                   .Encoded(false)
                                   .Sanitized(false)
                                   .SetWidth(30)
                                   .Css("hidden-xs") //hide on phones
                                   .RenderValueAs(c =>
                                @<div id="balloon" class="balloonClass">
                                    <b>
                                        @*<a href="#" onclick="Deleteconfirm('@c.ID')">Delete</a>*@
                                        <a href="#" onclick="confirmDelete('/Ethicalviolations/Delete/@c.ID','/Ethicalviolations')" data-toggle="tooltip" data-placement="bottom" title="Delete"><span class="glyphicon glyphicon-trash space" aria-hidden="true"></span></a>
                                    </b>
                                </div>);
columns.Add(c => c.BoardName).Titled("Originating Board");
columns.Add(c => c.PersonName).Titled("Person");

columns.Add(c => c.Date).Titled("Date").Format("{0:MM/dd/yyyy}");
    //columns.Add(c => c.productType).Titled("Product Type");
    columns.Add(c => c.EthicalViolation).Titled("Type of Ethical violation");
columns.Add(c => c.IsScanned).Encoded(false).Sanitized(false)
                   .SetWidth(30)
                   .Css("hidden-xs").RenderValueAs(x=>@<div> <input type="checkbox" disabled checked="@x.IsScanned" /></div>).Titled("Scanned & Saved");
                    columns.Add(c => c.IsLetterSent).Encoded(false).Sanitized(false)
                                   .SetWidth(30)
                                   .Css("hidden-xs").RenderValueAs(x =>@<div> <input type="checkbox" disabled checked="@x.IsLetterSent" /></div>).Titled("Letter sent to professional");
                    columns.Add(c => c.ISsharable).Encoded(false).Sanitized(false)
                                   .SetWidth(30)
                                   .Css("hidden-xs").RenderValueAs(x =>@<div> <input type="checkbox" disabled checked="@x.ISsharable" /></div>).Titled("Not to be shared with general public");
                        columns.Add(c => c.Notes).Titled("notes");
                    }).WithPaging(10).Sortable().Filterable().WithMultipleFilters()
<script src="~/Scripts/gridmvc.min.js"></script>

