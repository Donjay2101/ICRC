@model IEnumerable<IRCRC.Model.ViewModel.TestScoreViewModel>
@using GridMvc.Html
<div>
        <a href="#" data-src="http://localhost:65147/TestScores/EditTestScores?id=0" data-toggle="modal" data-target="#myModal" class="linkbtn editScore"><span class="glyphicon glyphicon-plus space" aria-hidden="true"></span>Create new</a>        
</div>

@Html.Grid(Model).Columns(columns =>
                    {
                        columns.Add()
               .Encoded(false)
               .Sanitized(false)
               .SetWidth(30)
               .Css("hidden-xs") //hide on phones
               .RenderValueAs(c =>
            @<div id="balloon" class="balloonClass">
                <b>
                    @*@Html.ActionLink("Edit", "Edit", new { id = c.ID }, new { @class = "modal_link", @Id = "editlink" })*@
                    <a href="#" data-src="http://localhost:65147/TestScores/EditTestScores?id=@c.ID" data-toggle="modal" data-target="#myModal"  class="modal_link editScore" id="editlink" data-toggle="tooltip" data-placement="bottom" title="Edit"><span class="glyphicon glyphicon-pencil space" aria-hidden="true"></span></a>
                </b>
            </div>);
                        columns.Add()
               .Encoded(false)
               .Sanitized(false)
               .SetWidth(30)
               .Css("hidden-xs") //hide on phones
               .RenderValueAs(c =>
            @<div id="balloon" class="balloonClass">
                <b>
                    @*@Html.ActionLink("Edit", "Edit", new { id = c.ID }, new { @class = "modal_link", @Id = "editlink" })*@
                    <a href="#"  class="modal_link" onclick="deleteData('/TestScores/delete?id=@c.ID')" data-toggle="tooltip" data-placement="bottom" title="Delete"><span class="glyphicon glyphicon-trash space" aria-hidden="true"></span></a>
                </b>
            </div>);
                        columns.Add(c => c.Exam).Titled("Exam");
                        columns.Add(c => c.ExamDate).Titled("Exam Date");
                        columns.Add(c => c.Score).Titled("Score");
                        columns.Add(c => c.Scale).Titled("Scale");
                        columns.Add(c => c.Status).Titled("Status");
                        columns.Add(c => c.TestingCompanyName).Titled("TestingCompanyName");
                        columns.Add(c => c.BoardName).Titled("Board");
                    }).WithPaging(10).Sortable().Filterable().WithMultipleFilters()
@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
<script src="~/Scripts/gridmvc.min.js"></script>

<script>

    function deleteData(url) {

        var firstname = $('#FirstName').val();
        var lastname = $('#LastName').val();
        var address = $('#Address1').val();
        debugger;
        var isAdmin = readCookie('AdminCookie');
        if (isAdmin.toUpperCase() != "ADMIN") {

            alert('admin privilages required.');
            return;
        }
        showOverLay();
        if (confirm('you are about to delete this record are you sure?')) {
            $.ajax({
                url: url,
                type: "POST",
                success: function (data) {
                    if (data) {
                        $('#scoresContainer').load('/TestScores/LoadScores?firstname=' + firstname + "&lastname=" + lastname + "&address1=" + encodeURIComponent(address), function () {
                            hideOverLay();
                        });
                    }
                },
                error: function (err) {
                    alert(err.statusText);
                }


            });
        }
    }
</script>

